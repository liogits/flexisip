services:

  redis:
    container_name: redis
    build:
      context: ./redis
      dockerfile: redis-alpine
    # need to download default config file:redis.conf from https://redis.io/topics/config
    # then modify it to enable the auth access(password), and input it into /redis/etc directory.
    # NOTE: maybe no need to run with redis.conf, because of it is running only inside the docker network.
    # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. 
    # To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or 
    # run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
    command: [ "redis-server", "/etc/redis/redis.conf" ]
    privileged: true
    restart: always
    networks:
      proxy-tier:
        ipv4_address: 172.10.0.2

  flexisip-mariadb:
    container_name: flexisip-mariadb
    image: mariadb
    restart: always
    volumes:
      - mariadbdata:/var/lib/mysql
    # refer to .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      proxy-tier:
        ipv4_address: 172.10.0.3

##### nginx
  # after "docker-compose up -d", enter the container and execute the following commands. 
  # "certbot certonly --standalone --agree-tos -n -m ficus.online@gmail.com -d sip.example.org"
  # or
  # "certbot --nginx --agree-tos -n -m ficus.online@gmail.com -d sip.example.org"
  # then
  # "cd /etc/letsencrypt/live/sip.example.org"
  # "cp fullchain.pem cafile.pem"
  # "awk 1 privkey.pem cert.pem > agent.pem"

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: nginx-alpine
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # nginx config
      - ../volumes/nginx/config:/etc/nginx/conf.d
      # certbot letsencrypt certification
      - letsencrypt:/etc/letsencrypt
      # shared the directory /var/www/html in phpmysql-fpm container
      - phpmyadmin:/var/www/html/phpmyadmin
    depends_on:
      - phpmyadmin
      - php-fpm-laravel
    restart: always
    networks:
      proxy-tier:
        ipv4_address: 172.10.0.4

  phpmyadmin:
    container_name: phpmyadmin
    build:
      context: ./pma
      dockerfile: phpmyadmin-alpine
    tty: true
    expose:
      - "9000"
    environment:
      - PMA_HOST=flexisip-mariadb
      - PMA_PORT=3306
      - PMA_ABSOLUTE_URI=http://localhost/phpmyadmin
    volumes:
      - phpmyadmin:/var/www/html
      - /sessions
    depends_on:
      - flexisip-mariadb
    restart: always
    networks:
      proxy-tier:
        ipv4_address: 172.10.0.5

  ##### php-fpm-laravel
  php-fpm-laravel:
    container_name: php-fpm-laravel
    build:
      context: ./php-fpm
      dockerfile: php-fpm-alpine-laravel
    tty: true
    expose:
      - "9000"
    # "php artisan serve" commmand default port
    ports:
      - 8080:8000
    volumes:
      # for laravel php framework
      # flexiapi origins here
#      - ../volumes/laravel/html:/var/www/html
      - flexiapi:/var/www/html
    depends_on:
      - flexisip-mariadb
    restart: always
    networks:
      proxy-tier:
        ipv4_address: 172.10.0.6

  flexisip:
    container_name: flexisip
    ports:
      - 5060:5060
      - 5061:5061
      - 5060:5060/udp
      - 5061:5061/udp
      - 3478:3478/udp
      
    build:
      context: ./flexisip
      dockerfile: flexisip
    volumes:
      - ../volumes/flexisip/config:/etc/flexisip
      - ../volumes/flexisip/log:/var/opt/belledonne-communications/log/flexisip
      - letsencrypt:/etc/flexisip/tls
    depends_on:
      - redis
      - flexisip-mariadb
    networks:
      proxy-tier:
        ipv4_address: 172.10.0.10


### $ docker network create --gateway 172.10.0.1 --subnet 172.10.0.0/24 flexisip-proxy
networks:
  proxy-tier:
    name: flexisip-proxy

### $ docker volume create phpmyadmin letsencrypt mariadbdata flexiapi
volumes:
  phpmyadmin:
    external: true
  letsencrypt:
    external: true
  mariadbdata:
    external: true
  flexiapi:
    external: true
